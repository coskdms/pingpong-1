<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Partner">
	<select id="selectHobby" resultType="kh.pingpong.dto.HobbyDTO">
		select * from hobby
	</select>
	
	<select id="selectLanguage" resultType="kh.pingpong.dto.LanguageDTO">
		select * from language
	</select>
	
	<!-- 파트너 상세 검색 -->
	<select id="search" resultType="kh.pingpong.dto.PartnerDTO">
		select * from (select partner.*,row_number() over(order by seq desc) rnum from partner 
		<trim prefix="where" prefixOverrides="and|or">
			<if test="pdto.gender != null">
				gender = #{pdto.gender}
			</if>
			<if test="pdto.name != null">
				and name like '%'||#{pdto.name}||'%'
			</if>
			<if test="pdto.hobby != null">
				and hobby like '%'||#{pdto.hobby}||'%'
			</if> 
			<if test="pdto.lang_can != null">
				and lang_can like '%'||#{pdto.lang_can}||'%'
			</if>
			<if test="pdto.lang_learn != null">
				and lang_learn like '%'||#{pdto.lang_learn}||'%'
			</if>		
 	 		<if test="pdto.address != null">
				and address like '%'||#{pdto.address}||'%'
			</if>  
 			<if test="pdto.age != 0">
				and age like '%'||#{pdto.age}||'%'
			</if>
			
		</trim>
		) where rnum between 1 and 10
	</select>
	
	<!-- 검색 최신순 / 인기순 -->
	<select id="alignT" resultType="kh.pingpong.dto.PartnerDTO">
		select * from partner
		<trim prefix="ORDER BY">
	         <if test="align == 'recent'">  partner_date desc</if>
	         <if test="align == 'point'">  review_point desc</if>
		</trim> 
	</select>
	
	<select resultType="int" id="getArticleCount">
		select count(*) from partner
	</select>
	
	<select resultType="kh.pingpong.dto.PartnerDTO" id="selectBySeq">
		select * from partner where seq= #{seq} 
	</select>
	
	<!-- 페이징 -->
	<select id="selectByPageNo" resultType="kh.pingpong.dto.PartnerDTO">
		select * from (select partner.*,row_number() over(order by seq desc) rnum from partner) where rnum between #{start} and #{end}
	</select>


	<!-- 파트너 등록 -->
	<resultMap id="MemProfile" type="kh.pingpong.dto.MemberDTO">
    	<result property="sysname" column="profile"/>
    </resultMap>
	<select id="selectMember" resultMap="MemProfile">
		select * from member where id= #{id}
	</select>
	
	<insert id="insertPartner">
		insert into partner values(partner_seq.nextval,#{mdto.id,jdbcType=VARCHAR},
		#{mdto.name,jdbcType=VARCHAR},#{mdto.age,jdbcType=INTEGER},
		#{mdto.gender,jdbcType=VARCHAR},#{mdto.email,jdbcType=VARCHAR},
		#{mdto.country,jdbcType=VARCHAR},#{mdto.phone_country,jdbcType=VARCHAR},
		#{mdto.phone,jdbcType=VARCHAR},#{mdto.address,jdbcType=VARCHAR},
		#{mdto.sysname,jdbcType=VARCHAR},#{mdto.lang_can,jdbcType=VARCHAR},
		#{mdto.lang_learn,jdbcType=VARCHAR},#{mdto.hobby,jdbcType=VARCHAR},
		#{mdto.introduce,jdbcType=VARCHAR},sysdate,0, 0, 
		#{contact,jdbcType=VARCHAR})
	</insert>
	
	<!-- 파트너 등록시  회원의 grade default 에서 partner로 업데이트  -->
	<update id="updateMemberGrade">
		update member set grade='partner' where id=#{id,jdbcType=VARCHAR} and name=#{name,jdbcType=VARCHAR} and email=#{email,jdbcType=VARCHAR}
	</update>
	
	<!-- 파트너 삭제  -->
	<delete id="deletePartner">
		delete from partner where id=#{id} and name=#{name}
	</delete>
	
	<!-- 파트너 삭제로 멤버 업데이트 -->
	<update id="updateMemberGradeD">
		update member set grade = 'default' where id = #{id}
	</update>

	<!-- 전체 파트너  -->
	<select id="partnerListAll" resultType="kh.pingpong.dto.PartnerDTO">
		select * from partner
	</select>
	
	<!-- 리뷰 글쓰기  -->
	<insert id="reviewWrite">
		insert into review values(review_seq.nextval, #{writer}, #{point}, #{contents}, default, #{category}, #{parent_seq}, #{thumNail})
	</insert>
	
	<!-- 리뷰 리스트 출력  -->
	<select id="reviewList" resultType="kh.pingpong.dto.ReviewDTO">
		select * from review where parent_seq = #{value} order by write_date desc
	</select>
	
	<!-- 리큐 포인트 가져오기 -->
	<select id="reviewAvg" resultType="java.lang.Double">
		select round(avg(point),2) from review where parent_seq = #{value}
	</select>
	
	<!-- 리큐 포인트 가져오기 -->
	<select id="reviewCount" resultType="java.lang.Integer">
		select count(*) from review where parent_seq = #{value}
	</select>
	
	<!-- 리뷰 포인트 업데이트 -->
	<update id="partnerReviewPoint">
		update partner set review_point = ${reviewAvg} where seq = ${seq}
	</update>
	
	<!-- 리뷰 총 개수  -->
	<update id="partnerReviewCount">
		update partner set review_count = ${reviewCount} where seq = ${seq}
	</update>
	
	<!-- 찜 -->
	<insert id="insertJjim">
		insert into jjim values(jjim_seq.nextval, #{id}, '파트너', #{parent_seq})
	</insert>
	
	<delete id="deleteJjim">
		delete jjim where id = #{id} and parent_seq = #{parent_seq} and category = '파트너'
	</delete>
	
	<select id="selectJjim" resultType="int">
		select seq from jjim where id = #{id} and parent_seq = #{parent_seq} and category = '파트너'
	</select>
</mapper>
